<?php

/**
 * @file
 * Formats multi value reference fields as Swiper sliders.
 */

use Drupal\Core\Template\Attribute;

/**
 * Implements hook_theme().
 */
function reference_swiper_theme($existing, $type, $theme, $path) {
  return [
    'swiper_reference_field' => ['render element' => 'element'],
  ];
}

/**
 * Implements hook_field_formatter_info_alter().
 */
function reference_swiper_field_formatter_info_alter(array &$info) {
  // Make the swiper reference formatter available for files and images if the
  // file_entity module is installed.
  if (\Drupal::moduleHandler()->moduleExists('file_entity') && !empty($info['reference_swiper_formatter'])) {
    $info['reference_swiper_formatter']['field_types'][] = 'file';
    $info['reference_swiper_formatter']['field_types'][] = 'image';
  }
}

/**
 * Prepares variables for a swiper reference field.
 *
 * Default template: swiper-reference-field.html.twig.
 *
 * @param array $variables
 *   An associative array containing:
 *   - element: An associative array containing the properties of the element.
 *     Properties used: #id, #attributes, #children.
 */
function template_preprocess_swiper_reference_field(&$variables) {
  $element = $variables['element'];
  $parameters = $element['#swiper_parameters'];

  // Copy some values into variables for easier access in template.
  $delta = 0;
  while (!empty($element['#children'][$delta])) {
    $variables['children'][$delta] = $element['#children'][$delta];
    $delta++;
  }
  $variables['label_hidden'] = isset($element['#children']['#label_display']) && $element['#children']['#label_display'] == 'hidden';
  $variables['hashnav'] = isset($parameters['hashnav']) ? TRUE : FALSE;

  // Prepare attributes.
  $variables['attributes'] = new Attribute();
  $variables['title_attributes'] = new Attribute();
  $variables['container_attributes'] = new Attribute($element['#attributes']);
  // These values are taken from the swiper option set form, but Attribute
  // escapes the values automatically using Html::escape, thus no need to escape
  // any values here.
  $variables['wrapper_attributes'] = new Attribute(['class' => $parameters['wrapperClass']]);
  $variables['slide_attributes'] = new Attribute(['class' => $parameters['slideClass']]);

  // Check for controls and add them to variables array if necessary.
  $controls = [
    'pagination' => 'pagination',
    'next_button' => 'nextButton',
    'prev_button' => 'prevButton',
    'scrollbar' => 'scrollbar',
  ];
  foreach ($controls as $control => $param_key) {
    if (!empty($parameters[$param_key])) {
      $variables['controls'][$control]['attributes'] = new Attribute([
        // Replace the dot in the CSS selector string of the control.
        'class' => [str_replace('.', '', $parameters[$param_key])],
      ]);
    }
  }
}
