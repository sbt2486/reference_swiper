{#
/**
 * @file
 * Default theme implementation of a field swiper container.
 *
 * Available variables:
 * - attributes: HTML attributes for the containing element.
 * - children: The rendered child elements of the container.
 * - has_parent: A flag to indicate that the container has one or more parent
 *   containers.
 * - pager: Indicates whether or not to render an element for pagination.
 * - next_button: Indicates whether or not to render the 'next' button.
 * - prev_button: Indicates whether or not to render the 'previous' button.
 * - scrollbar: Indicates whether or not to render the a swiper scrollbar.
 *
 * @see template_preprocess_swiper_container()
 *
 * @ingroup themeable
 */
#}
{%
  set classes = [
    'field',
    'field--name-' ~ element['#children']['#field_name']|clean_class,
    'field--type-' ~ element['#children']['#field_type']|clean_class,
    'field--label-' ~ element['#children']['#label_display']|clean_class,
  ]
%}
{%
  set title_classes = [
    'field__label',
    label_display == 'visually_hidden' ? 'visually-hidden',
  ]
%}
<div{{ attributes.addClass(classes) }}>
  {% if not element['#children']['#label_hidden'] %}
    <div{{ title_attributes.addClass(title_classes) }}>{{ element['#children']['#title'] }}</div>
  {% endif %}
  <div {{ container_attributes }}>
    <div {{ wrapper_attributes.addClass('field__items') }}>
      {% for slide_content in children %}
          <div {{ slide_attributes.addClass('field__item') }}>
            {{ slide_content }}
          </div>
      {% endfor %}
    </div>

    {% for control in controls %}
      {% if control %}
        <div {{ control.attributes }}></div>
      {% endif %}
    {% endfor %}
  </div>
</div>
