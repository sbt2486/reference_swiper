<?php

/**
 * @file
 * Formats multi value fields as Swiper sliders.
 */

use Drupal\Core\Template\Attribute;

/**
 * Implements hook_theme().
 */
function field_swiper_theme($existing, $type, $theme, $path) {
  return [
    'swiper_container' => ['render element' => 'element'],
  ];
}

/**
 * Implements hook_field_formatter_info_alter().
 */
function field_swiper_field_formatter_info_alter(array &$info) {
  // Make the Swiper reference formatter available for files and images if the
  // file_entity module is installed.
  if (\Drupal::moduleHandler()->moduleExists('file_entity') && !empty($info['swiper_formatter'])) {
    $info['swiper_formatter']['field_types'][] = 'file';
    $info['swiper_formatter']['field_types'][] = 'image';
  }
}

/**
 * Prepares variables for the swiper container.
 *
 * Default template: swiper-container.html.twig.
 *
 * @param array $variables
 *   An associative array containing:
 *   - element: An associative array containing the properties of the element.
 *     Properties used: #id, #attributes, #children.
 */
function template_preprocess_swiper_container(&$variables) {
  $element = $variables['element'];

  // Copy values into variables for easier access in template.
  $delta = 0;
  while(!empty($element['#children'][$delta])) {
    $variables['children'][$delta] = $element['#children'][$delta];
    $delta++;
  }
  $variables['label_hidden'] = ($element['#children']['#label_display'] == 'hidden');

  // Prepare attributes.
  $variables['attributes'] = new Attribute();
  $variables['title_attributes'] = new Attribute();
  $variables['container_attributes'] = new Attribute($element['#attributes']);
  $variables['wrapper_attributes'] = new Attribute(['class' => $element['#swiper_parameters']['wrapperClass']]);
  $variables['slide_attributes'] = new Attribute(['class' => $element['#swiper_parameters']['slideClass']]);

  // Check for controls and add variables for them necessary.
  $parameters = $element['#swiper_parameters'];
  $controls = [
    'pagination' => 'pagination',
    'next_button' => 'nextButton',
    'prev_button' => 'prevButton',
    'scrollbar' => 'scrollbar',
  ];
  foreach ($controls as $control => $param_key) {
    if (!empty($parameters[$param_key])) {
      $variables['controls'][$control]['attributes'] = new Attribute([
        // Replace the dot in the CSS selector string of the control.
        'class' => [str_replace('.', '', $parameters[$param_key])],
      ]);
    }
  }
}
