<?php

/**
 * @file
 * Formats multi value fields as Swiper sliders.
 */

use Drupal\Core\Template\Attribute;

function field_swiper_theme($existing, $type, $theme, $path) {
  return [
    'swiper_container' => ['render element' => 'element']
  ];
}

/**
 * Prepares variables for the swiper container.
 *
 * Default template: swiper-container.html.twig.
 *
 * @param array $variables
 *   An associative array containing:
 *   - element: An associative array containing the properties of the element.
 *     Properties used: #id, #attributes, #children.
 */
function template_preprocess_swiper_container(&$variables) {
  $variables['has_parent'] = FALSE;
  $element = $variables['element'];
  // Ensure #attributes is set.
  $element += array('#attributes' => array());

  // Special handling for form elements.
  if (isset($element['#array_parents'])) {
    // Assign an html ID.
    if (!isset($element['#attributes']['id'])) {
      $element['#attributes']['id'] = $element['#id'];
    }
    $variables['has_parent'] = TRUE;
  }

  $variables['children'] = $element['#children'];
  $variables['attributes'] = $element['#attributes'];

  // Check for controls and add variables for them necessary.
  $parameters = $element['#swiper_parameters'];
  $controls = [
    'pagination' => 'pagination',
    'next_button' => 'nextButton',
    'prev_button' => 'prevButton',
    'scrollbar' => 'scrollbar',
  ];
  foreach ($controls as $control => $param_key) {
    if (!empty($parameters[$param_key])) {
      $variables['controls'][$control]['attributes'] = new Attribute([
        // Replace the dot in the CSS selector string of the control.
        'class' => [str_replace('.', '', $parameters[$param_key])]
      ]);
    }
  }
}
